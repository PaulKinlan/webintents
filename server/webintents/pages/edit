{% extends "webintents/layouts/base.html" %}
{% block title %}Edit{% endblock %}
{% block headline %}Edit - http://webintents.org/edit{% endblock %}
{% block content %}
<section>
<p>
  The edit intent is designed to give applications the ability to offer a simple mechanism to edit data from the current page.
</p>
<p>
  An action that can handle edit could be anything that the user has installed, including and not limited to image manipulation tools and text editors. 
</p>
<p>
  The "Edit" protocol is intended to be a lightweight edit facility.
</p>
<h2>Registration</h2>
<pre>&lt;intent
  <a href="#action">action</a>="http://webintents.org/edit" 
  <a href="#type">type</a>="image/*" 
  <a href="#href">href</a>="edit.html"
 /&gt;</pre>
<dl>
  <dt id="action">action</dt>
    <dd>Required. Must be http://webintents.org/edit</dd>
  <dt id="type">type</dt>
    <dd>Optional. Types are a filter</dd> 
  <dt id="href">href</dt>
    <dd>Optional. If specified, it will point to the action that is loaded when the user chooses the service.  If undefined, use the current page.</dd> 
</dl>
<h2>Invocation</h2>
<pre>var data = /* Parse the data from canvas or somewhere else */;
var intent = new Intent("http://webintents.org/edit", "image/png", data);

/* Set up the callback that recieves the data */
var onsuccess = function(data) {
  // Add the new data to the image.
  var logo = document.getElementById("wilogo");
  logo.src = data;
};

window.navigator.startActivity(intent, onsuccess);</pre>

<h3>Try it!</h3>
<div>
  <img src="/images/webintents.png" id="wilogo" style="height:256px; width: 256px; box-shadow: 0px 0px 5px black;"/>
</div>
<script>
window.addEventListener("load", function() {
  var canvas = document.getElementById("canvas");
  var context = canvas.getContext("2d");
  var wilogo = document.getElementById("wilogo");
  context.drawImage(wilogo, 0, 0);
}, false);

function invoke() {
  var canvas = document.getElementById("canvas");
  var intent = new WebKitIntent("http://webintents.org/edit", "image/png", canvas.toDataURL("image/png") );

  var onSuccess = function(data) { 
    var logo = document.getElementById("wilogo");
    if(data instanceof Blob || data.constructor.name === "Blob") {
      logo.src = webkitURL.createObjectURL(data);
    }
    else {
      logo.src = data;
    }
  };
  var onError = function(data) { /* boooo */ };

  window.navigator.webkitStartActivity(intent, onSuccess, onError);
}
</script>
<canvas id="canvas" style="display: none;" width="256" height="256"></canvas>
<p><button onclick="invoke()">Edit</button></p>

<h2>Data Formats</h2>
<p>Clients and services can only interact with each other if the both support the same intent AND the same data type. Data-types can be any arbitary string, but it is expected that client and service will pass the same data if they both agree to support the protocol.</p>
<p>Advisory data-schemes are described below based off <a href="http://en.wikipedia.org/wiki/Internet_media_type" target="_blank">MIME-Types</a> or <a href="http://activitystrea.ms/head/activity-schema.html#object-types" target="_blank">Activity Streams</a></p>
<dl id="dataformats">
  <dt>image/*</dt>
  <dd><pre>[<i>Blob</i>] || [<i>Data URI</i>] || <i>Blob</i> || <i>Data URI</i></pre></dd>
  <dt>audio/*</dt>
  <dd><pre>[<i>Blob</i>] || [<i>Data URI</i>] || <i>Blob</i> || <i>Data URI</i></pre></dd>
  <dt>video/*</dt>
  <dd><pre>[<i>Blob</i>] || [<i>Data URI</i>] || <i>Blob</i> || <i>Data URI</i></pre></dd>
  <dt>text/uri-list</dt>
  <dd><pre>[<i>uri</i>] || <i>uri</i></pre></dd>
</dl>
</section>
{% endblock %}
